import{b as a,o as n,w as u,g as t,ad as l,v as i,x as m,S as r}from"./modules/vue-ByaFkLfc.js";import{I as p}from"./slidev/default-OSQRsGrB.js";import{u as c,f as d}from"./slidev/context-C-rGaWvD.js";import"./index-hztOwWZi.js";import"./modules/shiki-DxovNVNZ.js";const v={__name:"slides.md__slidev_20",setup(f){const{$clicksContext:o,$frontmatter:s}=c();return o.setup(),(_,e)=>(n(),a(p,i(m(r(d)(r(s),19))),{default:u(()=>e[0]||(e[0]=[t("h1",null,"呼叫圖 Q & A",-1),t("ul",null,[t("li",null,"Q1：有必要畫呼叫圖嗎？從程式碼應該就能看出問題了吧"),t("li",null,[l("A1：畫呼叫圖只是用來確認呼叫關係，並非必要。但隨著程式的複雜性提高，函式越來越多，層的數量也會增加，這時呼叫圖就能提供一個全局觀，對於培養設計直覺非常有幫助 "),t("br"),t("br")]),t("li",null,"Q2：每次寫程式都要畫呼叫圖嗎？"),t("li",null,[l("A2：只要熟悉分層架構，完全可以在腦中建構呼叫圖。不過，當要與他人合作時，呼叫圖不失為一個有效溝通的工具 "),t("br"),t("br")]),t("li",null,"Q3：這些「層」是真實存在嗎？有可能不同人畫出來的層不一樣嗎？"),t("li",null,"A3：「分層設計」是一種觀點，許多人透過它來思考如何寫程式，進而找出提升重複使用性、可測試性與可維護性的方法。程式的層並非絕對，當有人的分層方式與你不同時，可了解別人的分層邏輯為何")],-1)])),_:1},16))}};export{v as default};
