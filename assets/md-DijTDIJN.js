import{aJ as u,b as d,o as l,w as m,g as t,ah as o,f as s,ad as n,v as c,x as f,S as i}from"./modules/vue-ByaFkLfc.js";import{I as v}from"./slidev/default-OSQRsGrB.js";import{u as _,f as x}from"./slidev/context-C-rGaWvD.js";import"./index-hztOwWZi.js";import"./modules/shiki-DxovNVNZ.js";const B={style:{color:"red"}},k={style:{color:"red"}},A={__name:"slides.md__slidev_71",setup(C){const{$clicksContext:a,$frontmatter:p}=_();return a.setup(),(D,e)=>{const r=u("click");return l(),d(v,c(f(i(x)(i(p),70))),{default:m(()=>[e[4]||(e[4]=t("h3",null,"🔪 牛刀小試",-1)),o((l(),s("div",null,e[0]||(e[0]=[t("p",null,"1. 關於抽象屏障（abstraction barrier）哪個敘述是正確的？",-1),t("p",null,"A. 抽象屏障是用來限制程式不能跨層呼叫函式的機制",-1),t("p",null,"B. 抽象屏障會降低函式的呼叫效率，僅適合用於大型系統",-1),t("p",null,"C. 抽象屏障能幫助開發者與非工程部門各自專注自己的職責",-1),t("p",null,"D. 抽象屏障內部的所有函式都必須是純函式（pure function）",-1)]))),[[r]]),o((l(),s("p",B,e[1]||(e[1]=[n("答案：C")]))),[[r]]),o((l(),s("div",null,e[2]||(e[2]=[t("p",null,"2. 根據呼叫圖的原則，以下哪一層函式的測試價值最高？",-1),t("p",null,"A. 一個只被一個函式呼叫的頂層函式",-1),t("p",null,"B. 一個同時被多個中層函式呼叫的底層工具函式",-1),t("p",null,"C. 一個位於抽象屏障上方、主要處理 DOM 操作的函式",-1),t("p",null,"D. 一個只處理例外錯誤的 try-catch 包裝函式",-1)]))),[[r]]),o((l(),s("p",k,e[3]||(e[3]=[n("答案：B")]))),[[r]])]),_:1},16)}}};export{A as default};
