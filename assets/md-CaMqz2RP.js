import{aJ as m,b as p,o as l,w as d,g as i,ah as e,f as r,ad as o,v as f,x as v,S as n}from"./modules/vue-ByaFkLfc.js";import{I as x}from"./slidev/default-OSQRsGrB.js";import{u as k,f as B}from"./slidev/context-C-rGaWvD.js";import"./index-hztOwWZi.js";import"./modules/shiki-DxovNVNZ.js";const S={__name:"slides.md__slidev_64",setup(w){const{$clicksContext:a,$frontmatter:u}=k();return a.setup(),(C,t)=>{const s=m("click");return l(),p(x,f(v(n(B)(n(u),63))),{default:d(()=>[t[6]||(t[6]=i("h1",null,"總結 - 原則 3：讓下層函式保持簡約不變",-1)),i("ul",null,[e((l(),r("li",null,t[0]||(t[0]=[o("原則 3 適用於所有層，而非只有抽象屏障")]))),[[s]]),e((l(),r("li",null,t[1]||(t[1]=[o("在屏障中加入的函式越少，未來更改時要變更的東西也越少")]))),[[s]]),e((l(),r("li",null,t[2]||(t[2]=[o("抽象屏障內的函式屬於與程式的「底層運作」較有關的函式，簡化此層中的函式能讓除錯更容易")]))),[[s]]),e((l(),r("li",null,t[3]||(t[3]=[o("當要在程式中加入新功能時，盡可能在更高的層級實現。 應利用下層提供的函式作為基礎，避免直接修改下層函式")]))),[[s]]),e((l(),r("li",null,t[4]||(t[4]=[o("抽象屏障內的函式越少，使用者更容易記得其中有哪些操作可用")]))),[[s]]),e((l(),r("li",null,t[5]||(t[5]=[o("在理想情況下每個程式層級，應只包含必須的函式，且無需頻繁進行修改或添加新函式，以保持每層的簡潔性")]))),[[s]])])]),_:1},16)}}};export{S as default};
